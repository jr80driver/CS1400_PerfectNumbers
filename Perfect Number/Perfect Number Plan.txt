# Jacob Smith
# A01476417
# Assn8
# Plan for Task1

1. Requirements:
    Find four "perfect numbers" under 10,000. A perfect number is one that is equal to the sum
    all of its divisors, excluding itself. For example, 6 is the first perfect number, because 
    6 = 3 + 2 + 1.
2. System Analysis:
    INPUTS:
        All numbers between 1, and 10,000
    OUTPUTS: perfect numbers
3. System Design:
    define "i"
    define variable for # of perfect numbers
    define iterations
    loop "i" in range (2, 10000)
        if statement for when to stop
        else statement for running another loop
            variable for running sum of numbers for each number in range
            loop each number up to "i"
                increase iterations
                if statement to add any number that divides without a remainder to the running total
                if statement to print "i" if the running sum is equal to "i"
    print runtime and total iterations

4. Implementation:

5. Testing:
    Reduce iterations:
        a. try excluding all numbers that are not even.
            - This cut down on iterations
        b. try defining iterations within loop one.
            - This cut iterations down, but too much. It was not accurately counting
              the number of times the inner loop it running. It is only counting the
              last time. Removed this section
        c. try excluding all numbers divisible by 5.
            - This cut down on iterations